{"version":3,"sources":["app/models/Pagination.tsx","app/api/agent.ts","app/models/activity.ts","app/models/Profile.ts","app/stores/ActivityStore.ts","app/stores/ProfileStore.ts","app/stores/userStore.ts","app/stores/Store.ts","app/stores/CommonStore.ts","app/stores/modalStores.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilter.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/activitydashbord.tsx","app/common/form/MyTextInput.tsx","features/USers/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/USers/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/Loadingcomponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/deteils/ActivityDeteiledChat.tsx","features/activities/deteils/ActivityDeteiledHeader.tsx","features/activities/deteils/ActivityDeteiledInfo.tsx","features/activities/deteils/ActivityDeteiledSideBar.tsx","features/activities/deteils/ActivityDeteils.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerErrors.tsx","app/common/modals/ModelContainers.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoUploadwidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonstore","headers","Authorization","response","a","JSON","parse","error","status","console","log","toast","method","errors","hasOwnProperty","history","push","ModelStateErrors","key","flat","setServerError","Promise","reject","responseBody","Response","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","Create","activity","update","dele","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivitySore","activityRegister","Map","selectedActivity","editeMode","loadind","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","restPredicate","forEach","loadActivity","axiosParams","res","setActivity","setPagination","runInAction","LoadOneActivity","getActivity","userstore","isGoing","attendence","some","isHost","hostUsername","host","find","x","Date","selectActivity","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","iscancelled","ClearSelectedActivity","updateAttendeeFolowing","attndee","following","followersCount","makeAutoObservable","reaction","keys","clear","Params","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","loading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","loadUserActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayname","activityStore","loadFollowings","userStor","creds","setToken","modelstore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","err","setAppLoaded","setItem","modal","open","openModal","content","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addcomment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","e","preventDefault","handleFollow","ProfileCard","Card","Description","str","length","substring","truncate","bio","extra","Icon","attendees","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","useState","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivity","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","useEffect","Grid","GridColumn","pageStart","loadMore","currentPage","hasMore","totalItems","initialLoad","Column","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","PlaceHolder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","IsLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","placeholder","CategoryOptions","MyDateInput","selected","useHistory","useParams","SetActivity","validationschema","nullable","enableReinitialize","newactivity","uuid","handelformsubmit","rows","showTimeSelect","timeCaption","dateFormat","placeholderText","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","atende","Extra","ActivityDeteiledHeader","ActivityDeteiledInfo","ActivityDeteiledChat","ActivityDeteiledSideBar","TestErrors","SetErrors","hideProgressBar","widths","baseUrl","primary","NotFound","Inline","ServerError","Meesage","Modal","onClose","setEditMode","isCurrentUser","setEditeMode","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handelTabChange","itemsPerRow","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","SetFiles","dzstyles","borderRaduis","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadwidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","SetTarget","currentTarget","handelSetMainPhoto","handeldeletePhoto","menuPosition","Statistic","followingCount","Divider","PrivateRoute","Component","component","rest","loacation","useLocation","finally","path","HomePage","ActivittDashboard","ActivityDeteils","ActivityForm","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0e1eb867.chunk.js","sourcesContent":["export interface Pagination{\r\n    currentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data:T;\r\n    pagination:Pagination;\r\n\r\n    constructor(data:T,pagination:Pagination){\r\n        this.data=data;\r\n        this.pagination=pagination;\r\n    }\r\n} \r\nexport class PagingParams{\r\n    pageNumber;\r\n    pageSize;\r\nconstructor(pageNumber=1,pageSize=2)\r\n{\r\n    this.pageNumber=pageNumber;\r\n    this.pageSize=pageSize; \r\n}\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { config } from \"process\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/Pagination\";\r\n\r\nimport { photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { User, userFormValues } from \"../models/User\";\r\nimport { store } from \"../stores/Store\";\r\n\r\nconst sleep=(delay:number)=>{\r\nreturn new Promise((resolve)=>{\r\n    setTimeout(resolve,delay)\r\n})\r\n}\r\n\r\naxios.defaults.baseURL=process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token=store.commonstore.token;\r\n    if(token) config.headers.Authorization=`Bearer ${token}`\r\n    return config;\r\n})\r\naxios.interceptors.response.use(async response =>{\r\n    if(process.env.NODE_ENV==='development')await sleep(1000);\r\n        const pagination=response.headers['pagination'];\r\n        if(pagination)\r\n        {\r\n            response.data=new PaginatedResult(response.data,JSON.parse(pagination));\r\n            return response as AxiosResponse<PaginatedResult<any>>\r\n        }\r\n        return response;\r\n    \r\n},(error:AxiosError)=>{\r\n    const{data,status,config}=error.response!;\r\n    console.log(error.response);\r\n    switch(status)\r\n    {\r\n        case 400:\r\n            if( typeof data==='string')\r\n            {\r\n                toast.error(data);\r\n            }\r\n            if(config.method==='get'&&data.errors.hasOwnProperty('id'))\r\n            {\r\n                history.push('/not-found'); \r\n            }\r\n            if(data.errors)\r\n            {\r\n                const ModelStateErrors=[];\r\n                for(const key in data.errors)\r\n                {\r\n                    if(data.errors[key])\r\n                    {\r\n                        ModelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw ModelStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unatharized');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonstore.setServerError(data);\r\n            history.push('/server-error')\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\nconst responseBody=<T>(Response:AxiosResponse<T>)=> Response.data;\r\n\r\nconst requests={    \r\n    get:<T>(url:string)=>axios.get<T>(url).then(responseBody),\r\n    post:<T>(url:string , body:{})=>axios.post<T>(url,body).then(responseBody),\r\n    put:<T>(url:string,body:{})=>axios.put<T>(url,body).then(responseBody),\r\n    del:<T>(url:string)=>axios.delete<T>(url).then(responseBody),\r\n\r\n}\r\n\r\nconst Activities={\r\n\r\n    list:(params:URLSearchParams) =>  axios.get<PaginatedResult<Activity[]>>('/activities',{params})\r\n    .then(responseBody),\r\n    details:(id:string)=> requests.get<Activity>(`/activities/${id}`),\r\n    Create:(activity:ActivityFormValues)=>requests.post<void>('/activities',activity),\r\n    update:(activity:ActivityFormValues)=>requests.put<void>(`/activities/${activity.id}`,activity),\r\n    dele:(id:string)=>requests.del<void>(`/activities/${id}`),\r\n    attend:(id:string)=>requests.post<void>(`/activities/${id}/attend`,{})\r\n}\r\nconst Account={\r\n    current:()=>requests.get<User>('/account'),\r\n    login:(user:userFormValues )=>requests.post<User>('/account/login',user),\r\n    register:(user:userFormValues )=>requests.post<User>('/account/register',user)\r\n}\r\nconst Profiles={\r\n    get:(username:string)=>requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto:(file:Blob)=>{\r\n        let formData=new FormData();\r\n        formData.append('File',file);\r\n        return axios.post<photo>('photos',formData,{\r\n            headers:{'Content-type':'multipart/form-data'}\r\n        })\r\n        },\r\n   \r\n    setMainPhoto:(id:string)=>requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto:(id:string)=>requests.del(`/photos${id}`),\r\n    updateProfile:(profile:Partial<Profile>)=>requests.put<void>(`/profiles/`,profile),\r\n    updateFollowing:(username: string)=>requests.post(`/follow/${username}`,{}),\r\n    listFollowings:(username:string,predicate:string)=>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`), \r\n    listActivities:(username:string,predicate:string)=>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n    \r\n}\r\n\r\nconst agent={\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\nexport default agent;\r\n","import { th } from \"date-fns/locale\";\r\nimport { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date|null;\r\n    city: string;\r\n    description: string;\r\n    category: string;\r\n    venue: string;\r\n    hostUsername:string;\r\n    iscancelled:boolean;\r\n    isGoing:boolean;\r\n    isHost:boolean;\r\n    host?:Profile;\r\n    attendence:Profile[]\r\n\r\n  }\r\n  export class Activity implements Activity\r\n  {\r\n    constructor(init?:ActivityFormValues)\r\n    {\r\n      Object.assign(this,init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues{\r\n   \r\n    id?: string=undefined;\r\n    title: string='';\r\n    category: string='';\r\n    description: string='';\r\n    date: Date|null=null;\r\n    city: string='';\r\n    venue: string='';\r\n\r\n    constructor(activity?:ActivityFormValues){\r\n      if(activity)\r\n      {\r\n        this.id=activity.id;\r\n        this.title=activity.title;\r\n        this.category=activity.category;\r\n        this.description=activity.description;\r\n        this.date=activity.date;\r\n        this.city=activity.city;\r\n        this.venue=activity.venue;\r\n\r\n      }\r\n    }\r\n  }\r\n  ","import { User } from \"./User\";\r\n\r\n\r\nexport interface Profile{\r\n    username:string;\r\n    displayName:string;\r\n    image?:string;\r\n    bio?:string;\r\n    followersCount:number;\r\n    followingCount:number;\r\n    following:boolean;\r\n    photos?:photo[];\r\n}\r\nexport class Profile implements Profile{\r\n    constructor(user:User){\r\n        this.username=user.username;\r\n        this.displayName=user.displayName;\r\n        this.image=user.image;\r\n    \r\n    }\r\n}\r\nexport interface photo\r\n{\r\n    id:string;\r\n    url:string;\r\n    isMain:boolean\r\n}\r\n\r\nexport interface UserActivity{\r\n    id:string;\r\n    title:string;\r\n    category:string;\r\n    date:Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport{format} from 'date-fns';\r\nimport { store } from \"./Store\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { Pagination, PagingParams } from \"../models/Pagination\";\r\n\r\n\r\n \r\nexport default class ActivitySore{\r\n activityRegister=new Map<string,Activity>();\r\n selectedActivity:Activity|undefined=undefined;\r\n editeMode=false;\r\n loadind=false;\r\n loadingInitial=false;\r\n pagination:Pagination|null=null;\r\n pagingParams=new PagingParams();\r\n predicate=new Map().set('all',true);\r\n    constructor()\r\n    {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n        ()=>this.predicate.keys(),\r\n        ()=> {\r\n            this.pagingParams=new PagingParams();\r\n            this.activityRegister.clear();\r\n            this.loadActivity();\r\n        }\r\n    )\r\n    }\r\n    setPagingParams=(pagingParams:PagingParams)=>\r\n    {\r\n        this.pagingParams=pagingParams; \r\n    }\r\n    setPredicate=(predicate:string,value:string|Date)=>{\r\n        const restPredicate=()=>{\r\n            this.predicate.forEach((value,key)=>{\r\n                if(key!=='startDate')this.predicate.delete(key) ;\r\n            })\r\n        }\r\n        switch(predicate){\r\n            case'all':\r\n                restPredicate();\r\n                this.predicate.set('all',true);\r\n                break;\r\n            case'isGoing':\r\n                restPredicate();\r\n                this.predicate.set('isGoing',true);\r\n                break;\r\n            case'isHost':\r\n                restPredicate();\r\n                this.predicate.set('isHost',true);\r\n                break;\r\n            case'startDate':\r\n                restPredicate();\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate',value)\r\n                break;\r\n            }\r\n    }\r\n    get axiosParams()\r\n    {\r\n        const Params = new URLSearchParams();\r\n        Params.append('pageNumber',this.pagingParams.pageNumber.toString());\r\n        Params.append('pageSize',this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value,key)=>{\r\n            if(key=== 'startDate')\r\n            {\r\n                Params.append(key,(value as Date).toISOString())\r\n            }\r\n            else{\r\n                Params.append(key,value);\r\n            }\r\n\r\n        })\r\n        return Params;\r\n    }\r\n    get activitiesByDate(){\r\n        return Array.from(this.activityRegister.values()).sort((a,b)=>\r\n         a.date!.getTime()- b.date!.getTime());\r\n    }\r\n\r\n    loadActivity=async ()=>{\r\n        this.loadingInitial=true;\r\n        try{\r\n            const res=await agent.Activities.list(this.axiosParams);\r\n        \r\n            res.data.forEach(activity=>{\r\n            this.setActivity(activity);\r\n            })\r\n            this.setPagination(res.pagination);\r\n            this.loadingInitial=false;\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loadingInitial=false;\r\n            })\r\n            \r\n        }\r\n \r\n    }\r\n    setPagination=(pagination:Pagination)=>{\r\n        this.pagination=pagination;\r\n    }\r\n\r\n    LoadOneActivity=async(id:string)=>{\r\n        let activity=this.getActivity(id);\r\n        if(activity)\r\n        {\r\n            this.selectedActivity=activity\r\n            return activity;\r\n        }\r\n        else{\r\n            this.loadingInitial=true;\r\n            try {\r\n              activity = await agent.Activities.details(id); \r\n              this.setActivity(activity);\r\n              runInAction(()=>{\r\n                this.selectedActivity=activity;\r\n\r\n              })\r\n              this.loadingInitial=false;\r\n              return activity;\r\n              \r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n                this.loadingInitial=false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity=(activity:Activity)=>{\r\n    \r\n        const user=store.userstore.user;\r\n        if(user){\r\n            activity.isGoing=activity.attendence!.some(\r\n                a=>a.username===user.username\r\n            )\r\n            activity.isHost=activity.hostUsername===user.username;\r\n            activity.host=activity.attendence?.find(x=>x.username === activity.hostUsername);\r\n        }\r\n        activity.date=new Date(activity.date! )\r\n        this.activityRegister.set(activity.id,activity);\r\n    }\r\n\r\nprivate getActivity=(id:string)=> {\r\n    return this.activityRegister.get(id);\r\n}\r\n\r\n\r\n   \r\n\r\n   selectActivity=(id:string)=>{\r\n        this.selectedActivity=this.activityRegister.get(id);\r\n   }\r\n\r\n\r\n   createActivity=async(activity:ActivityFormValues)=>{\r\n        const user=store.userstore.user;\r\n        const attendee=new Profile(user!)\r\n    try {\r\n        await agent.Activities.Create(activity);\r\n        const newActivity= new Activity(activity);\r\n        newActivity.hostUsername=user!.username;\r\n        newActivity.attendence=[attendee];\r\n        this.setActivity(newActivity)\r\n        runInAction(()=>{\r\n            this.selectedActivity=newActivity;\r\n          \r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n\r\n   }\r\n   get groupedActivity()\r\n   {\r\n       return Object.entries(\r\n\r\n        this.activitiesByDate.reduce((activities,activity)=>{\r\n            const date=format(activity.date!,'dd MMM yyyy')\r\n            activities[date]=activities[date]?[...activities[date],activity]:[activity];\r\n           \r\n            //const category=activity.category;\r\n            //activities[category]=activities[category]?[...activities[category],activity]:[activity];\r\n             return activities;\r\n        },{} as{[key:string]:Activity[]})\r\n       )\r\n\r\n   }\r\n\r\n  updateActivity=async(activity:ActivityFormValues)=>{\r\n    \r\n      try {\r\n          await agent.Activities.update(activity);\r\n          runInAction(()=>{\r\n              if(activity.id)\r\n              {\r\n                  let updatedActivity={...this.getActivity(activity.id),...activity}\r\n                  this.activityRegister.set(activity.id,updatedActivity as Activity);\r\n                this.selectedActivity=updatedActivity as Activity;\r\n              }\r\n              \r\n            \r\n        \r\n          })\r\n          \r\n      } catch (error) {\r\n        console.log(error);\r\n        \r\n      }\r\n  }\r\n\r\ndeleteActivity=async(id:string)=>\r\n{\r\n        this.loadind=true;\r\n    try {\r\n    \r\n        await agent.Activities.dele(id);\r\n        this.activityRegister.delete(id);\r\n       \r\n        this.loadind=false;\r\n\r\n} catch (error) {\r\n    \r\n    console.log(error);\r\n    runInAction(()=>{\r\n        this.loadind=false;\r\n    })\r\n}   \r\n}\r\n\r\n\r\n    updateAttendance= async ()=>{\r\n        //msh htshta8l\r\n        const user=store.userstore.user;\r\n        this.loadind=true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                if(this.selectedActivity?.isGoing)\r\n                {\r\n                    this.selectedActivity.attendence=\r\n                    this.selectedActivity.attendence?.filter(a=>a.username!==user?.username);\r\n                    this.selectedActivity.isGoing=false;\r\n                }else{\r\n\r\n                    const attendee=new Profile(user!);\r\n                    this.selectedActivity?.attendence?.push(attendee);\r\n                    this.selectedActivity!.isGoing=true;\r\n                }\r\n                this.activityRegister.set(this.selectedActivity!.id,this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }finally{\r\n            runInAction(()=>this.loadind=false);\r\n            \r\n        }\r\n    }\r\n\r\n    cancelActivityToggle =async()=>{\r\n        this.loadind=true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                this.selectedActivity!.iscancelled=!this.selectedActivity?.iscancelled;\r\n                this.activityRegister.set(this.selectedActivity!.id,this.selectedActivity!);\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }finally{\r\n            runInAction(()=>this.loadind=false);\r\n        }\r\n    }\r\n    ClearSelectedActivity=()=>{\r\n        this.selectedActivity=undefined;\r\n    }\r\n    updateAttendeeFolowing=(username:string)=>{\r\n        this.activityRegister.forEach(activity=>{\r\n            activity.attendence.forEach(attndee=>{\r\n                if(attndee.username=== username)\r\n                {\r\n                    attndee.following? attndee.followersCount-- : attndee.followersCount++;\r\n                    attndee.following=!attndee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class  ProfileStore{\r\n\r\n    profile:Profile | null=null;\r\n    loadingProfile=false;\r\n    uploading=false;\r\n    loading=false;\r\n    followings:Profile[]=[];\r\n    loadingFollowings=false;\r\n    activeTab=0;\r\n    userActivities:UserActivity[]=[];\r\n    loadingActivities=false;\r\n    constructor()\r\n    {\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            ()=>this.activeTab,\r\n            activeTab=>{\r\n                if(activeTab===3||activeTab===4)\r\n                {const predicate=activeTab===3?'followers':'following';\r\n                this.loadFollowings(predicate);\r\n            }else{\r\n                this.followings=[];\r\n            }\r\n            }\r\n        )\r\n    }\r\n    loadUserActivities=async(username:string,predicate?:string)=>\r\n{\r\n    this.loadingActivities=true;\r\n    try {\r\n        const activities=await agent.Profiles.listActivities(username,predicate!);\r\n        runInAction(()=>{\r\n            this.userActivities=activities;\r\n            this.loadingActivities=false;\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n        runInAction(()=>{this.loadingActivities=false});\r\n    }\r\n}\r\n        setActiveTab=(activeTab:any)=>{\r\n            this.activeTab=activeTab;\r\n        }\r\n    get isCurrentUser()\r\n    {\r\n        if(store.userstore.user&& this.profile)\r\n        {\r\n            return store.userstore.user.username===this.profile.username;\r\n        } \r\n        return false;\r\n    }\r\n    loadProfile=async(username:string)=>{\r\n        this.loadingProfile=true;\r\n        try {\r\n            const profile=await agent.Profiles.get(username);\r\n            runInAction(()=>{\r\n                this.profile=profile;\r\n                this.loadingProfile=false;\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingProfile=false);\r\n        }\r\n\r\n    }\r\n\r\n    uploadPhoto= async(file:Blob)=>\r\n    {\r\n        this.uploading=true; \r\n        try {\r\n            const response=await agent.Profiles.uploadPhoto(file);\r\n            const photo=response.data;\r\n            runInAction(()=>{\r\n                if(this.profile)\r\n                {\r\n                    this.profile.photos?.push(photo);\r\n                    if(photo.isMain&& store.userstore.user)\r\n                    {\r\n                        store.userstore.setImage(photo.url);\r\n                        this.profile.image=photo.url;\r\n                    }\r\n                }\r\n                this.uploading=false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(()=>this.uploading=false);\r\n\r\n        }\r\n    }\r\n    setMainPhoto= async (photo:photo)=>{\r\n        this.loading=true;\r\n\r\ntry {\r\n    await agent.Profiles.setMainPhoto(photo.id)\r\n    store.userstore.setImage(photo.url);\r\n    runInAction(()=>{\r\n        if(this.profile&&this.profile.photos)\r\n        {\r\n            this.profile.photos.find(p=>p.isMain)!.isMain=false;\r\n            this.profile.photos.find(p=>p.id===photo.id)!.isMain=true;\r\n            this.profile.image=photo.url;\r\n            this.loading=false;\r\n        }\r\n    })\r\n} catch (error) {\r\n  runInAction(()=>this.loading=false);\r\n  console.log(error);  \r\n}\r\n    }\r\n\r\n    deletePhoto= async (photo:photo)=>\r\n    {\r\n        this.loading=true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(()=>{\r\n                if(this.profile)\r\n                {\r\n                    this.profile.photos=this.profile.photos?.filter(p=>p.id!==photo.id);\r\n                    this.loading=false;\r\n                }\r\n            })\r\n            \r\n        } catch (error) {\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    updateProfile=async(profile:Partial<Profile>)=>\r\n    {\r\n        this.loading=true;\r\n         try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(()=>{\r\n                if(profile.displayName&&profile.displayName!==store.userstore.user?.displayName)\r\n                {\r\n                    store.userstore.setDisplayname(profile.displayName);\r\n                }\r\n                this.profile={...this.profile,...profile as Profile};\r\n                this.loading=false;\r\n            })\r\n            \r\n         } catch (error) {\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        \r\n         }\r\n    }\r\n    updateFollowing= async(username:string,following:boolean)=>{\r\n        this.loading=true;\r\n\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFolowing(username);\r\n            runInAction(()=>{\r\n                if(this.profile&& this.profile.username!==store.userstore.user?.username&&\r\n                    this.profile.username===username)\r\n                {\r\n                    following?this.profile.followersCount++:this.profile.followersCount--;\r\n                    this.profile.following=!this.profile.following;\r\n                }\r\n                if(this.profile&&this.profile.username===store.userstore.user?.username)\r\n                {\r\n                    following?this.profile.followersCount++:this.profile.followersCount--;\r\n                }\r\n            \r\n                this.followings.forEach(profile=>{\r\n                    if(profile.username==username){\r\n                        profile.following? profile.followersCount--:profile.followersCount++;\r\n                        profile.following=!profile.following;\r\n                    }\r\n                })\r\n                this.loading=false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n\r\n    }\r\n    loadFollowings= async(predicate:string)=>{\r\n        this.loadingFollowings=true;\r\n        try {\r\n            const followings=await agent.Profiles.listFollowings(this.profile!.username,predicate);\r\n            runInAction(()=>{\r\n                this.followings=followings;\r\n                this.loadingFollowings=false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingFollowings=false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, userFormValues } from \"../models/User\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class userStor{\r\n    user: User| null=null;\r\n\r\n    constructor()\r\n    {\r\n        makeAutoObservable(this);\r\n    }\r\n    get IsLoggedIn()\r\n    {\r\n        return !!this.user;\r\n    }\r\n    login=async(creds:userFormValues)=>\r\n    {\r\n        try {\r\n            const user=await agent.Account.login(creds);\r\n            store.commonstore.setToken(user.token);\r\n            runInAction(()=> this.user=user);\r\n            history.push('./activities');\r\n            store.modelstore.closeModal();\r\n            console.log(user.username);\r\n            console.log(this.user?.username);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout=()=>{\r\n        store.commonstore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user=null;\r\n        history.push('/')\r\n    }\r\n\r\n    getUser= async()=>{\r\n        try {\r\n            const user=await agent.Account.current();\r\n            runInAction(()=> this.user=user);\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    register= async(creds:userFormValues)=>{\r\n        try {\r\n             const user=await agent.Account.register(creds);\r\n             store.commonstore.setToken(user.token);\r\n             runInAction(()=>this.user=user);\r\n             history.push('/activities');\r\n             store.modelstore.closeModal();\r\n        } catch(error)\r\n        {\r\n            \r\n            throw error;\r\n         \r\n            \r\n        }\r\n    }\r\n    setImage=(image:string)=>{\r\n        if(this.user)\r\n        this.user.image=image\r\n    }\r\n    setDisplayname=(name:string)=>{\r\n        if(this.user)\r\n        this.user.displayName=name\r\n    }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivitySore from \"./ActivityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./CommonStore\";\r\nimport modalStores from \"./modalStores\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport userStor from \"./userStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivitySore;\r\n    commonstore:CommonStore;\r\n    userstore:userStor;\r\n    modelstore:modalStores;\r\n    ProfileStore:ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store: Store={\r\n    activityStore:new ActivitySore(),\r\n    commonstore:new CommonStore(),\r\n   userstore:new userStor(),\r\n   modelstore:new modalStores(),\r\n   ProfileStore:new ProfileStore(),\r\n   commentStore:new CommentStore()\r\n}\r\n\r\nexport const StoreContext=createContext(store);\r\n\r\nexport function useStore(){\r\n\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerErrors } from \"../models/ServerErrors\";\r\n\r\nexport default class CommonStore{\r\n    error:ServerErrors|null=null;\r\n    token:string|null=window.localStorage.getItem('jwt');\r\n    appLoaded=false;\r\n\r\n    constructor()\r\n    {\r\n        makeAutoObservable(this);\r\n        reaction(()=>\r\n        this.token,\r\n        token=>{\r\n            if (token) {\r\n                window.localStorage.setItem('jwt',token);\r\n                \r\n            }else{\r\n                window.localStorage.removeItem('jwt');\r\n            }\r\n        }\r\n        )\r\n    }\r\n    setServerError=(err:ServerErrors)=>{\r\n        this.error=err;\r\n    }\r\n\r\n    setToken=(token:string|null)=>\r\n    {\r\n    this.token=token;\r\n    }\r\n    setAppLoaded=()=>{\r\n        this.appLoaded=true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\ninterface Model{\r\n    open:boolean,\r\n    body:JSX.Element|null;\r\n}\r\nexport default class modalStores{\r\n    modal:Model={\r\n        open:false,\r\n        body:null\r\n    }\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n    }\r\n\r\n    openModal=(content : JSX.Element)=>{\r\n        this.modal.open=true;\r\n        this.modal.body=content;\r\n    }\r\n    closeModal=()=>{\r\n        this.modal.open=false;\r\n        this.modal.body=null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, makeObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class CommentStore{\r\ncomments:ChatComment[]=[];  \r\nhubConnection:HubConnection | null=null;\r\n\r\nconstructor()\r\n{\r\n    makeAutoObservable(this);\r\n}\r\ncreateHubConnection=(activityId:string)=>\r\n{\r\n    if(store.activityStore.selectedActivity)\r\n    {\r\n        this.hubConnection=new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL+'?activityId='+activityId,{\r\n            accessTokenFactory:()=>store.userstore.user?.token!\r\n        })\r\n        .withAutomaticReconnect().configureLogging(LogLevel.Information).build();\r\n\r\n        this.hubConnection.start().catch(error=>console.log('Error establish connection:',error));\r\n        this.hubConnection.on(\"LoadComments\",(comments:ChatComment[])=>{\r\n            runInAction(()=>{\r\n                comments.forEach( comment=>{\r\n                    comment.createdAt=new Date(comment.createdAt+'Z')\r\n                })\r\n                \r\n                this.comments=comments\r\n            });\r\n        })\r\n        this.hubConnection.on(\"ReceiveComment\",(comment:ChatComment)=>{\r\n            runInAction(()=>{\r\n                comment.createdAt=new Date(comment.createdAt)\r\n                this.comments.unshift(comment)\r\n            });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection=()=>{\r\n        this.hubConnection?.stop().catch(error=>console.log('Error stopping connection:',error));\r\n    }\r\n\r\n    clearComments=()=>{\r\n        this.comments=[];\r\n        this.stopHubConnection();\r\n    }\r\n    addcomment= async ( values:any)=>{\r\n        values.activityId=store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment',values);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/Store\";\r\n\r\n\r\nexport default observer( function NavBar()\r\n{\r\n    const{userstore:{user,logout}}=useStore();\r\n    const {activityStore}=useStore();\r\n    return(\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\"  style={{marginRight:'10'}}/>\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities'/>\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors'/>\r\n\r\n                \r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity'  positive content= \"Create Activity\"/>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item position=\"right\">\r\n                    <Image src={user?.image||'/assets/user.png'} avatar spaced=\"right\"  />\r\n                    <Dropdown pointing=\"top left\" text={user?.displayName}> \r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item as={Link} to={`/profiles/${user?.username}` } text=\"My Profile\" icon='user'/>\r\n                        <Dropdown.Item onClick={logout} text=\"Logout\" icon='power'/>\r\n                    </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n\r\n        </Menu>\r\n    )\r\n\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\n\r\nexport default observer(function ActivityFilter()\r\n{\r\n    const{activityStore:{predicate,setPredicate}}=useStore();\r\n    return(\r\n        <>\r\n        <Menu vertical size=\"large\" style={{width:'86%',marginTop:25 }}>\r\n            <Header icon='filter' attached color='teal' content=\"Filters\"  />\r\n            <Menu.Item content=\" All Activities\"\r\n            active={predicate.has('all')}\r\n            onClick={()=>setPredicate('all','true') }\r\n            />\r\n            <Menu.Item \r\n            active={predicate.has('isGoing')}\r\n            onClick={()=>setPredicate('isGoing','true') }\r\n            content=\" I'm going\"/>\r\n            <Menu.Item content=\" I'm Hosting\"\r\n            active={predicate.has('isHost')}\r\n            onClick={()=>setPredicate('isHost','true') }\r\n            />\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar \r\n            onChange={(date)=>setPredicate('startDate',date as Date)}\r\n            value={predicate.get('startDate')||new Date()}\r\n        />\r\n        </>\r\n        \r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile\r\n}\r\nexport default observer(function FollowButton({profile}:Props){\r\n    const{ProfileStore,userstore}=useStore();\r\n    const{updateFollowing,loading}=ProfileStore;\r\n    if(userstore.user?.username===profile.username) return null;\r\n    function handleFollow(e:SyntheticEvent,username:string){\r\n        e.preventDefault();\r\n        profile.following?updateFollowing(username,false):updateFollowing(username,true);\r\n    }\r\n    return(\r\n        <Reveal animated='move' >\r\n                        <Reveal.Content visible style={{width:'100%'}}>\r\n                            <Button\r\n                            fluid \r\n                            color='teal'\r\n                            content={profile.following?'Following':'Not following'}\r\n                            />\r\n                        </Reveal.Content> \r\n                        <Reveal.Content hidden style={{width:'100%'}}>\r\n                            <Button \r\n                            fluid \r\n                            //basic\r\n                            color={profile.following? 'red' : 'green'} \r\n                            content={profile.following? 'Unfollow':'Follow'} \r\n                            loading={loading}\r\n                            onClick={(e)=>handleFollow(e,profile.username)}\r\n                            />\r\n                        </Reveal.Content>\r\n                    </Reveal>\r\n    )\r\n\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card,Icon,Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props{\r\n    profile: Profile\r\n}\r\nexport default function ProfileCard({profile}:Props)\r\n{\r\n    function truncate(str :string| undefined)\r\n    {\r\n        if(str)\r\n        {\r\n            return str.length>40 ? str.substring(0,37)+'....':str;\r\n        }\r\n    }\r\n    return(\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image||'/assets/user.png'}/>\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description> {truncate(profile.bio)}</Card.Description>\r\n            </Card.Content>\r\n\r\n            <Card.Content extra>\r\n                <Icon name='user'/>\r\n            {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile}/>\r\n        </Card>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\"; \r\nimport { Link } from \"react-router-dom\";\r\nimport { List,Image ,Popup} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props{\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}:Props)\r\n{\r\n\r\n    const styles={\r\n        borderColor:'orange',\r\n        borderWidth:3\r\n    }\r\n    return(\r\n            <List horizontal >\r\n                {attendees&& attendees.map(attndee => (\r\n                    <Popup\r\n                    hoverable\r\n                    key={attndee.username}\r\n                    trigger={\r\n                        <List.Item key={attndee.username} as={Link} to={`/profiles/${attndee.username}`}>\r\n                        <Image\r\n                        bordered\r\n                        style={attndee.following?styles:null}\r\n                        size=\"mini\" circular src={attndee.image|| '/assets/user.png'}/>\r\n                    </List.Item>\r\n                    }\r\n                    >\r\n                            <Popup.Content>\r\n                                <ProfileCard profile={attndee}/>\r\n                            </Popup.Content>\r\n                    </Popup>\r\n                    \r\n                ))}\r\n            </List>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport{format} from 'date-fns';\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\n interface Props{\r\n     activity:Activity;\r\n }\r\nexport default function ActivityListItem({activity}:Props)\r\n{\r\n        const{activityStore}=useStore();\r\n        const{deleteActivity,loadind}=activityStore;\r\n        const[target,SetTarget]=useState('');\r\n\r\n   /*  function handelActivityDeleted(e:SyntheticEvent<HTMLButtonElement>,id:string)\r\n     {\r\n        SetTarget(e.currentTarget.name);\r\n        deleteActivity(id);\r\n     }*/\r\n\r\n    return(\r\n        <Segment.Group>\r\n \r\n<Segment>\r\n    {activity.iscancelled&&\r\n    <Label attached=\"top\" color=\"red\" content=\"cancelled\" style={{textAlign:'centre'}}/>\r\n    }\r\n<Item.Group>\r\n    <Item>\r\n    <Item.Image style={{marginBottom:3}} size='tiny' circular src={activity.host?.image||'/assets/user.png'}/>\r\n    <Item.Content>\r\n        <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n            {activity.title}\r\n            </Item.Header>\r\n            <Item.Description>Hosted By <Link to={`/profiles/${activity.hostUsername}`}> {activity.host?.displayName} </Link> </Item.Description>\r\n            {activity.isHost&&(\r\n                <Item.Description>\r\n                    <Label basic color='orange'>\r\n                        you Are Hosting this Activity\r\n                    </Label>\r\n                </Item.Description>\r\n            )}\r\n            {activity.isGoing &&!activity.isHost&&(\r\n                <Item.Description>\r\n                    <Label basic color='green'>\r\n                        you Are Going To this Activity\r\n                    </Label>\r\n                </Item.Description>\r\n            )}\r\n            </Item.Content>\r\n            </Item>\r\n            </Item.Group>\r\n            </Segment>      \r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock'/>{ format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker'/> {activity.venue}\r\n                </span>\r\n        </Segment>\r\n            \r\n    <Segment secondary>\r\n            <ActivityListItemAttendee attendees={activity.attendence!}/>\r\n    </Segment>\r\n    <Segment clearing >\r\n        <span>{activity.description}</span>   \r\n        <Button \r\n            as={Link}\r\n            to={`/activities/${activity.id}`}\r\n            color='teal'\r\n            floated='right'\r\n            content='View'\r\n        />\r\n        </Segment>\r\n        </Segment.Group>\r\n        \r\n\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport React, { Fragment } from \"react\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer( function ActivityList()\r\n{\r\n    const{activityStore}=useStore();\r\n    const{groupedActivity}=activityStore\r\n    return(\r\n\r\n    <>\r\n        {groupedActivity.map(([group,activities]) =>\r\n        (\r\n            <Fragment key={group}>\r\n                <Header sub color='teal'>\r\n                    {group}\r\n                </Header>\r\n                {activities.map(activity=>(\r\n\r\n                    <ActivityListItem key={activity.id} activity={activity}/>\r\n\r\n                ))}\r\n\r\n            \r\n\r\n            </Fragment>\r\n        )\r\n    \r\n    )\r\n\r\n\r\n        }\r\n\r\n    </>\r\n    \r\n    )\r\n\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, GridColumn, Loader} from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/Pagination\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport ActivityFilter from \"./ActivityFilter\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default observer( function ActivittDashboard()\r\n{\r\n    const{activityStore}=useStore();\r\n    const{loadActivity,activityRegister,setPagingParams,pagination}=activityStore;\r\n    const[loadingNext,setLoadingNext]=useState(false);\r\n    function handleGetNext()\r\n    {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage+1))\r\n        loadActivity().then(()=>setLoadingNext(false));\r\n    }\r\nuseEffect(()=>{\r\n  if(activityRegister.size<=0)loadActivity();\r\n},[activityRegister,loadActivity])\r\n  \r\n\r\n\r\n    return(\r\n        <Grid>\r\n            <GridColumn width='10'>\r\n                {activityStore.loadingInitial&&!loadingNext?(\r\n                    <>\r\n                    <ActivityListItemPlaceholder />\r\n                    <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) :(\r\n<InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalItems}\r\n            initialLoad={false}\r\n            >\r\n            <ActivityList />\r\n            </InfiniteScroll>\r\n                )}\r\n                        \r\n            \r\n            </GridColumn>\r\n            <GridColumn width='6'>\r\n                <ActivityFilter/>\r\n            </GridColumn>\r\n                <Grid.Column width={10}>\r\n                    <Loader active={loadingNext}/>\r\n                </Grid.Column>\r\n            \r\n        </Grid>\r\n    )\r\n} )","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\nPlaceHolder:string;\r\nname:string;\r\ntype?:string\r\nlabel?:string;\r\n\r\n}\r\nexport default function MyTextInput(props:Props)\r\n{\r\n    const[field,meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched&& !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched&&meta.error? (\r\n                <Label basic color=\"red\"> {meta.error}</Label>\r\n            ): null}\r\n\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport react from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n\r\n\r\nexport default observer( function LoginForm ()\r\n{\r\n    const{userstore}=useStore();\r\n    return (\r\n        <Formik\r\n        initialValues={{email:\"\" ,password:\"\",error:null}}\r\n        onSubmit={(values,{setErrors})=>userstore.login(values).catch(error=>setErrors({error:'Invalid Email Or Password '}))}\r\n        >\r\n            {({handleSubmit,isSubmitting,errors})=>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\" >\r\n                    <Header as='h2' content=\"Login To Reactivities\" color='teal'textAlign=\"center\" />\r\n                    <MyTextInput name='email' PlaceHolder='Email'/>\r\n                    <MyTextInput name='password' PlaceHolder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                    name='error'\r\n                    render= {()=><Label style={{marginBottom:10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content ='Login' type='submit' fluid/>\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    errors:any;\r\n}\r\nexport default function ValidationErrors({errors}:Props)\r\n{\r\n    return(\r\n        <Message error>\r\n            {errors&&(\r\n                <Message.List>\r\n                    {errors.map((err:any,i:any)=>(\r\n                        <Message.Item key={i}>{err}   \r\n\r\n                        </Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n\r\n        </Message>\r\n\r\n    )\r\n}","import { ErrorMessage, ErrorMessageProps, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport react from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer( function RegisterForm()\r\n{\r\n    const{userstore}=useStore();\r\n    return (\r\n        <Formik\r\n        initialValues={{displayName:\"\",username:\"\",email:\"\" ,password:\"\",error:null}}\r\n        onSubmit={(values,{setErrors})=>userstore.register(values).catch(error=>setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            username: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}\r\n        >\r\n            {({handleSubmit,isSubmitting,errors,isValid,dirty})=>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete=\"off\" >\r\n                    <Header as='h2' content=\"Sign Up To Reactivities\" color='teal'textAlign=\"center\" />\r\n                    <MyTextInput name='displayName' PlaceHolder='Display Name'/>\r\n                    <MyTextInput name='username' PlaceHolder='Username'/>\r\n                    <MyTextInput name='email' PlaceHolder='Email'/>     \r\n                    <MyTextInput name='password' PlaceHolder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                    name='error'\r\n                    render= {()=><ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid||!dirty||isSubmitting} loading={isSubmitting} positive content ='Register' type='submit' fluid/>\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment ,Image, Button} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport LoginForm from \"../USers/LoginForm\";\r\nimport RegisterForm from \"../USers/RegisterForm\";\r\n\r\nexport default observer( function HomePage()\r\n{       const{userstore,modelstore}=useStore();\r\n    return(\r\n\r\n    <Segment inverted textAlign=\"center\" vertical className='masthead'>\r\n        <Container text>\r\n            <Header as ='h1' inverted> \r\n            <Image size='massive' src=\"/assets/logo.png\" alt='logo' style={{marginBottom:12}} />\r\n             Reactivities           \r\n            </Header>\r\n            {userstore.IsLoggedIn?(\r\n                <>\r\n                <Header as='h2'  inverted content=\"welcome to Reactivities\"/>\r\n                <Button as ={Link} to='/activities' size=\"huge\" inverted >\r\n                Go To Activities\r\n                </Button>\r\n                </>\r\n                \r\n            ):(\r\n            <>\r\n                <Button onClick={()=>modelstore.openModal(<LoginForm/>)} size=\"huge\" inverted >\r\n                Login!\r\n                </Button>\r\n                <Button onClick={()=>modelstore.openModal(<RegisterForm/>)} size=\"huge\" inverted >\r\n                Register!\r\n                </Button>\r\n            </>\r\n            )}\r\n            \r\n            \r\n        </Container>\r\n    </Segment>\r\n\r\n)\r\n\r\n})\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props\r\n{\r\n        inverted?: boolean;\r\n        content?:string;\r\n}\r\nexport default function LoadingComponent({inverted=true,content='loading...'}:Props)\r\n{\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\nPlaceHolder:string;\r\nname:string;\r\nrows:number;\r\nlabel?:string;\r\n\r\n}\r\nexport default function MyTextArea(props:Props)\r\n{\r\n    const[field,meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched&& !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched&&meta.error? (\r\n                <Label basic color=\"red\"> {meta.error}</Label>\r\n            ): null}\r\n\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\nPlaceHolder:string;\r\nname:string;\r\noptions:any;\r\nlabel?:string;\r\n\r\n}\r\nexport default function MySelectInput(props:Props)\r\n{\r\n    const[field,meta,helpers]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched&& !!meta.error}>\r\n            <label>\r\n                {props.label}\r\n            </label>\r\n            <Select\r\n            clearable\r\n            options={props.options}\r\n            value={field.value||null}\r\n            onChange={(e,d)=>helpers.setValue(d.value)}\r\n            onBlur={()=>helpers.setTouched(true)}\r\n            placeholder={props.PlaceHolder}\r\n            />\r\n            {meta.touched&&meta.error? (\r\n                <Label basic color=\"red\"> {meta.error}</Label>\r\n            ): null}\r\n\r\n        </Form.Field>\r\n    )\r\n\r\n}","export const CategoryOptions=[\r\n    {text:'Drinks' , value:'drinks'},\r\n    {text:'Culture' , value:'culture'},\r\n    {text:'Film' , value:'film'},\r\n    {text:'Food' , value:'food'},\r\n    {text:'Music' , value:'music'},\r\n    {text:'Travel' , value:'travel'}\r\n\r\n\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from \"react-datepicker\"\r\n\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>)\r\n{\r\n    const[field,meta,helpers]=useField(props.name!);\r\n    return(\r\n        <Form.Field error={meta.touched&& !!meta.error}>\r\n            <DatePicker\r\n            {...field}\r\n            {...props}\r\n            selected={(field.value && new Date(field.value))||null}\r\n            onChange={values=>helpers.setValue(values)}\r\n            />\r\n            {meta.touched&&meta.error? (\r\n                <Label basic color=\"red\"> {meta.error}</Label>\r\n            ): null}\r\n\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent } from \"react\";  \r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Segment ,Label, Header} from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/Loadingcomponent\";\r\nimport { Activity, ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport{v4 as uuid}from 'uuid';\r\nimport { Formik,Form, ErrorMessage } from \"formik\";\r\nimport* as Yup from'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { CategoryOptions } from \"../../../app/common/options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\n\r\nexport default observer( function ActivityForm()\r\n{\r\n    const history=useHistory();\r\n    const{activityStore}=useStore();\r\n    const{createActivity,updateActivity,LoadOneActivity,loadingInitial}=activityStore;\r\n    const{id}=useParams<{id:string}>();\r\n\r\n    const[activity,SetActivity]=useState<ActivityFormValues>(new ActivityFormValues());\r\n    const validationschema=Yup.object({\r\n        title:Yup.string().required('the activity title is required'),\r\n        description:Yup.string().required('the activity Descreption is required'),\r\n        category:Yup.string().required('the activity Category is required'),\r\n        city:Yup.string().required('the activity city is required'),\r\n        venue:Yup.string().required('the activity venue is required'),\r\n        date:Yup.string().required('the activity date is required').nullable(   ),\r\n\r\n    })\r\n    useEffect(()=>{\r\n        if(id) LoadOneActivity(id).then(activity=>SetActivity(new ActivityFormValues(activity)))\r\n    },[id,LoadOneActivity]);\r\n\r\n\r\n\r\nfunction handelformsubmit( activity:ActivityFormValues)\r\n{\r\n    if(!activity.id)\r\n    { \r\n        let newactivity={\r\n            ...activity,id:uuid()\r\n        };\r\n            createActivity(newactivity).then(()=>history.push(`/activities/${newactivity.id}`))\r\n    }else{\r\n        updateActivity(activity).then(()=>history.push(`/activities/${activity.id}`))\r\n    }\r\n}\r\n\r\n        if(loadingInitial) return<LoadingComponent content='Loading activity ....'/>\r\n    return(\r\n\r\n        <Segment  clearing>\r\n            <Header color=\"teal\"content=\"Activity Detials\" sub/>\r\n            <Formik\r\n             validationSchema={validationschema} \r\n             enableReinitialize initialValues={activity}\r\n              onSubmit={values=>handelformsubmit(values)}>\r\n                {({handleSubmit,isValid,isSubmitting,dirty})=>(\r\n                         <Form className='ui form' onSubmit={handleSubmit} autoComplete='off' >\r\n                            <MyTextInput name='title' PlaceHolder='Title'/>\r\n                        <MyTextArea rows={3} PlaceHolder='Descreption'  name='description'  />\r\n                        <MySelectInput options={CategoryOptions} PlaceHolder='Category'  name='category'  />\r\n                        <MyDateInput \r\n                        showTimeSelect\r\n                        timeCaption='time'\r\n                        dateFormat='MMMM d,yyyy h:mm aa'\r\n                         placeholderText='Date' name='date' />\r\n                    \r\n                        <Header color=\"teal\"content=\"Location Detials\" sub/>\r\n\r\n                        <MyTextInput PlaceHolder='City' name='city' />\r\n                        <MyTextInput PlaceHolder='Venue' name='venue' />\r\n                        <Button \r\n                        disabled={isSubmitting||!dirty||!isValid}\r\n                        loading={isSubmitting} floated='right' positive type='submit' content='Submit'/>\r\n                        <Button as={Link} to='/activities' floated='right'  type='button' content='cancel'/>\r\n                    </Form>\r\n                )}\r\n               \r\n            </Formik>\r\n            \r\n            \r\n        </Segment>\r\n    )\r\n\r\n})","import { Formik ,Form, Field, FieldProps} from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Segment, Header, Comment,  Button, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/Store'\r\nimport * as Yup from 'yup'\r\nimport { formatDistanceToNow } from 'date-fns'\r\ninterface Props{\r\n    activityId:string;\r\n}\r\nexport default observer(function ActivityDetailedChat({activityId}:Props) {\r\n    const{commentStore}=useStore();\r\n    useEffect(()=>{\r\n        if(activityId){\r\n            commentStore.createHubConnection(activityId)\r\n        }\r\n        return()=>{\r\n            commentStore.clearComments();\r\n        }\r\n    },[commentStore,activityId]);\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            \r\n                    \r\n\r\n            <Segment attached clearing>\r\n            <Formik\r\n            onSubmit={(values,{resetForm})=>commentStore.addcomment(values).then(()=>resetForm())}\r\n            initialValues={{body:''}}\r\n            validationSchema={Yup.object({\r\n                body:Yup.string().required()\r\n            })}\r\n            >\r\n                {({isSubmitting,isValid,handleSubmit})=>(\r\n                        <Form className='ui form'>\r\n                            <Field name='body' >\r\n                                {(props:FieldProps)=>(\r\n                                    <div style={{position:'relative'}} >\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                        placeholder=\"Enter your Comment (Enter to submit, Shift + Enter for new Line) \"\r\n                                        rows={2}\r\n                                        {...props.field}\r\n                                        onKeyPress={e=>{\r\n                                            if(e.key==='Enter'&&e.shiftKey)\r\n                                            {\r\n                                                return;\r\n                                            } if(e.key==='Enter'&&!e.shiftKey)\r\n                                            {\r\n                                                e.preventDefault();\r\n                                                isValid&&handleSubmit();\r\n                                            }\r\n                                        }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                )}    \r\n            </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment=>(\r\n                        <Comment key={comment.id}>\r\n                        <Comment.Avatar src={comment.image||'/assets/user.png'}/>\r\n                        <Comment.Content>\r\n                            <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                                {comment.displayName}\r\n                            </Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>{formatDistanceToNow(comment.createdAt)} ago </div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text style={{whiteSpace:'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n                    ))}\r\n                            </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport{format} from 'date-fns';\r\nimport { useStore } from '../../../app/stores/Store';\r\n\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const{activityStore:{updateAttendance,loadind,cancelActivityToggle}}=useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.iscancelled&&\r\n                <Label style={{position:'absolute',zIndex:1000,left:-14,top:20}} ribbon color=\"red\" content=\"Cancelled\" />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!,'dd MMM yyyy') }</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}> {activity.host?.displayName} </Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost? (\r\n                    <>\r\n                    <Button color={ activity.iscancelled? 'green':'red' }\r\n                    floated=\"left\"\r\n                    basic\r\n                    content={activity.iscancelled?'Re-activity Activity':'cancel Activity'}\r\n                    onClick={cancelActivityToggle}\r\n                    loading={loadind}\r\n                    />\r\n                    <Button \r\n                    disabled={activity.iscancelled}\r\n                    as={Link}\r\n                     to={`/manage/${activity.id}`}\r\n                      color='orange' floated='right'>\r\n                    Manage Event\r\n                </Button>\r\n                    </>\r\n                \r\n                ):activity.isGoing? (\r\n                    <Button loading={loadind} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ):(\r\n                    <Button  disabled={activity.iscancelled} loading={loadind} onClick={updateAttendance} color='teal'>Join Activity</Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n\r\n\r\n","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport{format} from 'date-fns';\r\n\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n            {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props\r\n{\r\n    activity:Activity;\r\n}\r\nexport default observer(function ActivityDetailedSidebar ({activity:{attendence,host}}:Props) {\r\n   if(!attendence) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendence.length} {attendence.length===1?'person':'People'} Going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendence.map(atende=>(\r\n                    <Item style={{ position: 'relative' }} key={atende.username}>\r\n                        {atende.username===host?.username&&\r\n                    <Label\r\n                        style={{ position: 'absolute' }}\r\n                        color='orange'\r\n                        ribbon='right'\r\n                    >\r\n                        Host\r\n                    </Label>}\r\n                    <Image size='tiny' src={atende.image||'/assets/user.png'} />\r\n                    <Item.Content verticalAlign='middle'>\r\n                        <Item.Header as='h3'>\r\n                            <Link to={`/profiles/${atende.username}`}>{atende.displayName}</Link>\r\n                        </Item.Header>\r\n                        {atende.following&&\r\n                        <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                    </Item.Content>\r\n                </Item>\r\n\r\n                    ))}\r\n                    </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/Loadingcomponent\";\r\nimport { useStore } from \"../../../app/stores/Store\";\r\nimport ActivityDeteiledChat from \"./ActivityDeteiledChat\";\r\nimport ActivityDeteiledHeader from \"./ActivityDeteiledHeader\";\r\nimport ActivityDeteiledInfo from \"./ActivityDeteiledInfo\";\r\nimport ActivityDeteiledSideBar from \"./ActivityDeteiledSideBar\";\r\n\r\n\r\n\r\nexport default observer( function ActivityDeteils()\r\n{\r\n  const{activityStore}=useStore();\r\n  const{selectedActivity:activity,LoadOneActivity,loadingInitial,ClearSelectedActivity}=activityStore\r\n  const{id}=useParams<{id:string}>();\r\nuseEffect(()=>{\r\nif (id) {\r\n  LoadOneActivity(id);\r\n  return()=>ClearSelectedActivity();\r\n}\r\n},[id,LoadOneActivity,ClearSelectedActivity])\r\n\r\n  if(loadingInitial|| !activity) return <LoadingComponent/>;\r\n  \r\n    return(\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDeteiledHeader activity={activity}/>\r\n          <ActivityDeteiledInfo activity={activity}/>\r\n          <ActivityDeteiledChat activityId={activity.id}/>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          \r\n        <ActivityDeteiledSideBar activity={activity}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n    )\r\n\r\n})","\r\nimport React from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useState } from 'react';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const[errors,SetErrors]=useState(null);\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => SetErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer position='bottom-right' hideProgressBar\r\n        />\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors&&\r\n            <ValidationErrors errors={errors}/>\r\n            }\r\n                </>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound()\r\n{\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name=\"search\" />\r\n                oops-- we've looked and not find this\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary >\r\n                Return To Activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n\r\nexport default function ServerError()\r\n{\r\n    const{commonstore}=useStore();\r\n    return(\r\n        <Container>\r\n            <Header as=\"h1\" content='server Error'/>\r\n            <Header sub as='h5' color=\"red\" content={commonstore.error?.Meesage} />\r\n            {commonstore.error?.details&&\r\n            <Segment>\r\n                <Header as='h4' content='stack trace' color='teal' />\r\n                <code style={{marginTop:'10px'}}>{commonstore.error.details}</code>\r\n            </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/Store\";\r\n\r\nexport default observer( function ModelContainers(){\r\n\r\n    const{modelstore}=useStore(); \r\n    return(\r\n            <Modal open={modelstore.modal.open} onClose={modelstore.closeModal} size=\"mini\" >\r\n                    <Modal.Content>{modelstore.modal.body}</Modal.Content>\r\n            </Modal>\r\n    )\r\n})","import { Formik,Form } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport * as Yup from 'yup';\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n    }\r\nexport default observer( function ProfileEditForm({setEditMode}: Props)\r\n{\r\n    const{ProfileStore:{updateProfile,profile}}=useStore();\r\n    return(\r\n        <Formik initialValues={{displayName:profile?.displayName,bio:profile?.bio}}\r\n        \r\n        onSubmit={values=>{\r\n            console.log(values);\r\n            updateProfile(values).then(()=>{\r\n                setEditMode(false);\r\n            })\r\n        }}\r\n        validationSchema={Yup.object({displayName:Yup.string().required()})}>\r\n\r\n        {({dirty,isSubmitting,isValid})=>(\r\n        <Form className='ui form'>\r\n            <MyTextInput PlaceHolder='Display Name' name='displayName'/>\r\n            <MyTextArea rows={3}PlaceHolder=\"Add You BIO\" name='bio'/>\r\n            <Button positive \r\n            type='submit'\r\n            loading={isSubmitting}\r\n            content='Update Profile'\r\n            floated='right'\r\n            disabled={!isValid||!dirty}\r\n            />\r\n\r\n        </Form>\r\n        )}\r\n\r\n        </Formik>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout()\r\n{\r\n    const{ProfileStore}=useStore();\r\n    const{profile,isCurrentUser}=ProfileStore;\r\n    const[editeMode,setEditeMode]=useState(false);\r\n    return(\r\n        <Tab.Pane>\r\n            <Grid >\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser&&(\r\n                        <Button basic floated='right'\r\n                        content={editeMode?'cancel':'Edite Profile'}\r\n                        onClick={()=>setEditeMode(!editeMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {editeMode?<ProfileEditForm setEditMode={setEditeMode} /> :\r\n                    <span style={{whiteSpace: 'pre-wrap'}} >\r\n                        {profile?.bio}\r\n                    </span>\r\n                    }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React, { SyntheticEvent } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Tab, TabPaneProps,Image } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport { format } from 'date-fns';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n\r\nconst panes=[\r\n    { menuItem:'Futue Events',pane:{key:'future'}},\r\n    {menuItem:'Past Events',pane:{key:'past'}},\r\n    {menuItem:'Hosting',pane:{key:'hosting'}},\r\n    \r\n];\r\nexport default observer( function ProfileActivities(){\r\n    const{ProfileStore}=useStore();\r\n    const{loadUserActivities,loadingActivities,userActivities,profile}=ProfileStore;\r\nuseEffect(()=>{\r\n    loadUserActivities(profile!.username);\r\n\r\n},[loadUserActivities,profile]);\r\n\r\nconst handelTabChange=(e:SyntheticEvent,data:TabPaneProps)=>\r\n{\r\n    loadUserActivities(profile!.username,panes[data.activeIndex as number].pane.key);\r\n};\r\n    return(\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated=\"left\" icon='calender' content={'Activities'}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab    \r\n                    panes={panes}\r\n                    menu={{secondary:true,pointing:true}}\r\n                    onTabChange={(e,data)=>handelTabChange(e,data)}\r\n                    />\r\n                    <br/>\r\n                    <Card.Group itemsPerRow={4}>\r\n                    {userActivities.map((activity:UserActivity)=>(\r\n                        <Card\r\n                        as={Link}\r\n                        to={`/activities/${activity.id}`}\r\n                        key={activity.id}\r\n                        >\r\n                            <Image src={`/assets/categoryImages/${activity.category}.jpg`}/>\r\n                            <Card.Content>\r\n                                <Card.Header textAlign=\"center\">\r\n                                    {activity.title}\r\n                                </Card.Header>\r\n                                <Card.Meta textAlign='center'>\r\n                                <div>{format(new Date(activity.date),'do LLL')}</div>\r\n                                <div>{format(new Date(activity.date),'h:mm a')}</div>\r\n                                </Card.Meta>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n        )\r\n\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer( function ProfileFollowings(){\r\nconst{ProfileStore} =useStore() ; \r\nconst{profile,loadingFollowings,followings,activeTab}=ProfileStore;\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' content={activeTab===3?`people following${profile?.displayName}`:`people${profile?.displayName} is following`} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile=>(\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n        </Tab.Pane>\r\n    )\r\n\r\n} )","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport'cropperjs/dist/cropper.css';\r\n\r\ninterface Props{\r\n    imagePreview:string;\r\n    setCropper:(cropper:Cropper)=> void;\r\n}\r\nexport default function PhotoWidgetCropper({imagePreview,setCropper}:Props)\r\n{\r\n    return(\r\n        <Cropper\r\n        src={imagePreview}\r\n        style={{height:200,width:'100%' }}\r\n        initialAspectRatio={1}\r\n        aspectRatio={1}\r\n        preview='.img-preview'\r\n        guides={false}\r\n        viewMode={1}\r\n        autoCropArea={1}\r\n        background={false}\r\n        onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n\r\n      \r\n    )\r\n\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\ninterface Props{\r\n    SetFiles:(files:any)=>void;\r\n}\r\nexport default function PhotoWidgetDropZone({SetFiles}:Props) {\r\n    const dzstyles={\r\n        border:'dashed 3px #eee',\r\n        borderColor:'#eee',\r\n        borderRaduis:'5px',\r\n        paddingTop:'30px',\r\n        textAlign:'center' as 'center',\r\n        height:200\r\n    }\r\n    const dzActive={\r\n        borderColor:'green',\r\n    }\r\n\r\nconst onDrop = useCallback(acceptedFiles => {\r\n    console.log(acceptedFiles);\r\n    SetFiles(acceptedFiles.map((file:any)=>Object.assign(file,{\r\n        preview:URL.createObjectURL(file)\r\n    })))\r\n    // Do something with the files\r\n}, [SetFiles])\r\nconst {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\nreturn (\r\n    <div {...getRootProps()} style={isDragActive ?{...dzstyles,...dzActive}:dzstyles} >\r\n    <input {...getInputProps()} />\r\n    <Icon name='upload' size='huge' />\r\n    <Header content=\"Drop image here\"/>\r\n    </div>\r\n)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Button, Grid, Header,Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/Store\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropZone\";\r\n\r\ninterface Props{\r\n    loading:boolean;\r\n    uploadPhoto:(file:Blob)=>void;\r\n}\r\nexport default function PhotoUploadwidget({loading,uploadPhoto}:Props)\r\n{\r\n    const[files,SetFiles]=useState<any>([]);\r\n    const[cropper,setCropper]=useState<Cropper>();\r\n\r\n    function onCrop()\r\n    {\r\n        if(cropper)\r\n        {\r\n            cropper.getCroppedCanvas().toBlob(blob=>uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            files.forEach((file:any)=>URL.revokeObjectURL(file.preview));\r\n\r\n        }\r\n    },[files])  \r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropZone SetFiles={SetFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize Image' />\r\n                {files && files.length > 0 &&(\r\n                <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n                {files && files.length &&\r\n                <> \r\n                <div className='img-preview' style={{minHeight:200,overflow:'hidden'}} />\r\n                <Button.Group widths={4}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled={loading} onClick={()=>SetFiles([])}  icon='close'/>\r\n                </Button.Group>\r\n                </>}\r\n                            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header,Image ,Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadwidget from \"../../app/common/imageUpload/PhotoUploadwidget\";\r\nimport { photo, Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer( function ProfilePhotos({profile}:Props)\r\n{\r\n    const{ProfileStore:{isCurrentUser,uploadPhoto,uploading,setMainPhoto,loading,deletePhoto}}=useStore(); \r\n    const[addPhotoMode,setAddPhotoMode]=useState(false);\r\n    const[target,SetTarget]=useState('');\r\n\r\n    function handelPhotoUpload(file:Blob){\r\n        uploadPhoto(file).then(()=>setAddPhotoMode(false));\r\n\r\n    }\r\n    function handelSetMainPhoto(photo:photo,e:SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        SetTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n\r\n    }\r\n    function handeldeletePhoto(photo:photo,e:SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        SetTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n\r\n    }\r\n    return(\r\n        <Tab.Pane>\r\n\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                <Header floated=\"left\" icon=\"image\" content='Photos' />\r\n                {isCurrentUser&&(\r\n                    <Button floated='right' basic\r\n                    content={addPhotoMode?'cancel':'Add Photo' }\r\n                    onClick={()=>setAddPhotoMode(!addPhotoMode)}\r\n                    />\r\n                )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode?(\r\n                        <PhotoUploadwidget uploadPhoto={handelPhotoUpload} loading={uploading} />\r\n                    ):(\r\n                        <Card.Group itemsPerRow={5}>\r\n                        {profile.photos?.map(photo=>(\r\n                        <Card key={photo.id}>\r\n                            <Image src={ photo.url }/>\r\n                            {isCurrentUser&&(\r\n                                <Button.Group fluid  widths={2}>\r\n                                        <Button basic color='green' content='Main' name={'main'+photo.id}\r\n                                        disabled={photo.isMain}\r\n                                        loading={target==='main'+photo.id&&loading}\r\n                                        onClick={e=>handelSetMainPhoto(photo,e)}\r\n                                        />\r\n                                        <Button \r\n                                        basic\r\n                                        color='red'\r\n                                        icon='trash'\r\n                                        loading={target===photo.id&&loading}\r\n                                        onClick={e=>handeldeletePhoto(photo,e)}\r\n                                        disabled={photo.isMain}\r\n                                        name={photo.id}\r\n                                        />\r\n                                </Button.Group>\r\n                            )}\r\n                        </Card>\r\n                        ))} \r\n                    </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport ProfileStore from \"../../app/stores/ProfileStore\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}:Props)\r\n{\r\n    const {ProfileStore}= useStore( );\r\n    const  panes=[\r\n        {menuItem:'About', render:()=><ProfileAbout/>},\r\n        {menuItem:'Photos', render:()=><ProfilePhotos  profile={profile}/>},\r\n        {menuItem:'Events', render:()=><ProfileActivities />},\r\n        {menuItem:'Followers', render:()=><ProfileFollowings/>},\r\n        {menuItem:'Following', render:()=><ProfileFollowings/>},\r\n    ];\r\n    return(\r\n    <Tab\r\n        menu={{fluid:true,vertical:true }}\r\n        menuPosition=\"right\"\r\n        panes={panes}\r\n        onTabChange={(e,data)=>ProfileStore.setActiveTab(data.activeIndex)}\r\n    />   \r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\"; \r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer( function ProfileHeader({profile}:Props)\r\n{\r\n    return(\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size=\"small\" src={profile.image|| '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1'  content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n        </Segment>\r\n    )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";  \r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/Loadingcomponent\";\r\nimport { useStore } from \"../../app/stores/Store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage()\r\n{\r\n    const{username}=useParams<{username:string}>();\r\n    const{ProfileStore}=useStore();\r\n    const{loadingProfile,loadProfile,profile,setActiveTab}=ProfileStore; \r\n\r\n    useEffect(()=>{\r\n        loadProfile(username);\r\n        return()=>{\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile,username])\r\n\r\n    if(loadingProfile) return <LoadingComponent content=\"Loading Profile....\" />\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile&& <> \r\n                <ProfileHeader profile={profile} />\r\n                <ProfileContent  profile={profile} /> \r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n    )\r\n})","import { ReactComponentElement } from \"react\";\r\nimport { ReactCropperElement } from \"react-cropper\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/Store\";\r\n\r\ninterface Props extends RouteProps{\r\n    component:React.ComponentType<RouteComponentProps<any>>|React.ComponentType<any>;\r\n}\r\nexport default function PrivateRoute({component: Component,...rest} :Props)\r\n{\r\n    const{userstore:{IsLoggedIn}}=useStore();\r\n    return(\r\n        <Route\r\n        {...rest}\r\n        render={(props)=>IsLoggedIn?<Component {...props}/>:<Redirect to='/'/>}\r\n        />\r\n    )\r\n}","import React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport NavBar from './NavBar'; \nimport ActivittDashboard from '../../features/activities/dashboard/activitydashbord';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDeteils from '../../features/activities/deteils/ActivityDeteils';\n  import TestErrors from '../../features/errors/TestErrors';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerErrors';\nimport LoginForm from '../../features/USers/LoginForm';\nimport { useStore } from '../stores/Store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './Loadingcomponent';\nimport { ToastContainer } from 'react-toastify';\nimport ModelContainers from '../common/modals/ModelContainers';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\n\n\nfunction App() {\n\n  const{commonstore,userstore}=useStore();\n  const loacation=useLocation();\n\n  useEffect(()=>{\n    if(commonstore.token){\n    userstore.getUser().finally(()=>commonstore.setAppLoaded());\n    }else{\n        commonstore.setAppLoaded();\n  }\n  },[commonstore,userstore])\n  if(!commonstore.appLoaded) return<LoadingComponent  content=\"Loading APP...\"/>\n  return (\n    <>\n    <ToastContainer position=\"bottom-right\" hideProgressBar/>\n    <ModelContainers />\n      <Route exact path='/' component={HomePage} />\n      <Route\n      path={'/(.+)'}\n      render={()=>(\n      <>\n        <NavBar  />\n      <Container style={{marginTop:'7em'}}>\n        <Switch>\n        <PrivateRoute exact path='/activities' component={ActivittDashboard} />\n        <PrivateRoute  path='/activities/:id' component={ActivityDeteils} />\n        <PrivateRoute key={loacation.key} path={['/createActivity','/manage/:id']} component={ActivityForm} />\n        <PrivateRoute path='/profiles/:username' component={ProfilePage}/>\n        <PrivateRoute path='/errors' component={TestErrors}/>\n        <Route path='/server-error' component={ServerError}/>\n        <Route component={NotFound}/>\n        </Switch>\n        \n      </Container>\n      </>\n\n      )}\n      />\n    </>\n  );\n}\n\nexport default observer( App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport'react-calendar/dist/Calendar.css';\nimport'react-datepicker/dist/react-datepicker.css';\nimport'react-toastify/dist/ReactToastify.min.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/Store';\nimport { Router } from 'react-router-dom';\nimport{createBrowserHistory}from'history'\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n<StoreContext.Provider  value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n</StoreContext.Provider> ,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}